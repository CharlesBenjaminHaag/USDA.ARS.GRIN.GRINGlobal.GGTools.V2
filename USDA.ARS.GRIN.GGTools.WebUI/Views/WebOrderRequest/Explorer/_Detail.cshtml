@model USDA.ARS.GRIN.GGTools.ViewModelLayer.WebOrderRequestViewModel

<style type="text/css">
    .scrollable-display-section {
        width: 100%; /* Flexible width */
        max-height: 100px; /* Fixed height */
        overflow-y: auto;
    }
</style>

<style type="text/css">
    .scrollable-table-section {
        width: 100%; /* Flexible width */
        max-height: 200px; /* Fixed height */
        overflow-y: auto;
    }
</style>

@if(Model.Entity.IsLocked == true)
{ 
    <div class="alert alert-info alert-dismissible">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <h5><i class="icon fas fa-lock"></i> Locked</h5>
        This web order request is being reviewed by <strong>@Model.Entity.OwnedByWebCooperatorName</strong> as of @Model.Entity.OwnedDate
    </div>
}

<div class="row">
    <div class="btn-group">
        @if (Model.Entity.StatusCode.Contains("NRR"))
        {
            if (Model.Entity.IsLocked == true && Model.Entity.OwnedByWebUserID == AppInfo.GetAuthenticatedUser().WebUserID)
            {
                <!-- On Hold -->
                if (Model.Entity.StatusCode == "NRR_HOLD")
                {
                    <button id="btnActionHoldRel"
                            data-ggtools-web-order-request-action="NRR_HOLD_REL"
                            type="button"
                            class="btn btn-default">
                        <i class="fas fa-unlock nav-icon"></i>
                        Remove Hold
                    </button>
                }
                else
                {
                    <button id="btnOpenModalHold"
                            data-ggtools-web-order-request-action="NRR_HOLD"
                            type="button"
                            class="btn btn-default">
                        <i class="fas fa-lock nav-icon"></i>
                        On Hold
                    </button>
                }

                <!-- On Country Hold -->
                if (Model.Entity.StatusCode == "NRR_HOLD_CTRY")
                {
                    <button id="btnActionHold"
                            data-ggtools-web-order-request-action="NRR_HOLD_CTRY_REL"
                            type="button"
                            class="btn btn-default">
                        <i class="fas fa-unlock nav-icon"></i>
                        Remove Country Hold
                    </button>
                }
                else
                {
                    <button id="btnOpenModalCountryHold"
                            data-ggtools-web-order-request-action="NRR_HOLD_CTRY"
                            type="button"
                            class="btn btn-default">
                        <i class="fas fa-lock nav-icon"></i>
                        On Country Hold
                    </button>
                }

                if (Model.Entity.StatusCode == "NRR_FLAG")
                {
                    <button id="btnOpenModalApprove"
                            data-ggtools-web-order-request-action="NRR_APPROVE"
                            type="button"
                            class="btn btn-default">
                        <i class="fas fa-thumbs-up text-green nav-icon"></i>
                        Approve
                    </button>
                    <button id="btnOpenModalReject"
                            data-ggtools-web-order-request-action="NRR_REJECT"
                            type="button"
                            class="btn btn-default">
                        <i class="fas fa-thumbs-down text-red nav-icon"></i>
                        Reject
                    </button>
                    <button id="btnOpenModalRequestInfo"
                            data-ggtools-web-order-request-action="NRR_INFO"
                            type="button"
                            class="btn btn-default">
                        <i class="fas fa-info text-blue nav-icon"></i>
                        Request Additional Information
                    </button>
                    <button id="btnOpenModalRequestInfo"
                            data-ggtools-web-order-request-action="NRR_CUR"
                            type="button"
                            class="btn btn-default">
                        <i class="fas fa-tree nav-icon"></i>
                        Email Curator(s)
                    </button>
                }
            }

            if (Model.Entity.IsLocked)
            {
                <button id="btnSetStatusUnLock"
                        type="button"
                        data-ggtools-is-locked="N"
                        class="btn btn-default float-right">
                    <i class="fas fa-unlock nav-icon"></i>
                    End Review
                </button>
            }
            else
            {
                <button id="btnSetStatusLock"
                        type="button"
                        data-ggtools-is-locked="Y"
                        class="btn btn-default float-right">
                    <i class="fas fa-lock nav-icon"></i>
                    Review/Edit
                </button>
            }


        }
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-1">
        <div class="form-group">
            <label>ID</label>
            <input type="text" value="@Model.Entity.ID" class="form-control form-control-sm" readonly="readonly" />
        </div>
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <label>Status</label>
            @{
                string statusCssClass = String.Empty;
                switch (Model.Entity.StatusCode.ToUpper())
                {
                    case "ACCEPTED":
                        statusCssClass = "background-color: #28a745; color:white;";
                        break;
                    case "CANCELED":
                        statusCssClass = "background-color: #ffc107; color:white;";
                        break;
                    case "SUBMITTED":
                        statusCssClass = "background-color: #6f42c1; color:white;";
                        break;
                    case "MIXED":
                        statusCssClass = "background-color: #007bff; color:white;";
                        break;
                    case "NRR_FLAG":
                        statusCssClass = "background-color: red; color:white;";
                        break;
                    case "NRR_HOLD":
                        statusCssClass = "background-color:mediumvioletred; color:white;";
                        break;
                    case "NRR_HOLD_CTRY":
                        statusCssClass = "background-color:indigo; color:white;";
                        break;
                }
            }
            @Html.TextBoxFor(x => x.Entity.StatusTitle, new { @class = "form-control form-control-sm", @readonly = "readonly", disabled = "disabled", @style = statusCssClass })
        </div>
    </div>
    <div class="col-md-3">
        <div class="form-group">
            <label>Submitted By</label>
            <div class="input-group">
                @Html.TextBoxFor(x => x.Entity.WebCooperatorFullName, new { @class = "form-control form-control-sm", @readonly = "readonly", disabled = "disabled" })
                <span class="input-group-append">
                    <a href="@Url.Action("SetStatus","WebCooperator", new { @entityId = Model.Entity.WebCooperatorID })" class="btn btn-default btn-sm"><i class="fa fa-search"></i></a>
                </span>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <label>Email</label>
        @Html.TextBoxFor(x => x.Entity.WebCooperatorEmail, new { @class = "form-control form-control-sm", @readonly = "readonly", disabled = "disabled" })
    </div>
    <div class="col-md-2">
        <div class="form-group">
            <label>Submitted</label>
            @Html.TextBoxFor(x => x.Entity.OrderDate, new { @class = "form-control form-control-sm", @readonly = "readonly", disabled = "disabled" })
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-6">
        <label>Requestor Address</label>
        <br />
        @Html.Raw(Model.Entity.WebCooperatorAddressFormatted)
    </div>
    <div class="col-md-6">
        <label>Shipping Address</label>
        <br />
        @Html.Raw(Model.Entity.ShippingAddressFormatted)
    </div>
</div>
<br />
<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <label>Intended Use Note</label>

            <div class="scrollable-display-section">
                @Model.Entity.IntendedUseCode: @Html.Raw(Model.Entity.IntendedUseNote)
            </div>

        </div>
    </div>
</div>

@if (!String.IsNullOrEmpty(Model.Entity.SpecialInstruction))
{
    <div class="row">
        <div class="col-md-12">
            <label>Special Instruction</label>
            <p>@Model.Entity.SpecialInstruction</p>
        </div>
    </div>
}

@if (!String.IsNullOrEmpty(Model.Entity.Note))
{
    <div class="row">
        <div class="col-md-12">
            <label>Note</label>
            <p>@Model.Entity.Note</p>
        </div>
    </div>
}
<hr />
<div id="section-web-order-request-items">
    @Html.Partial("~/Views/WebOrderRequestItem/_List.cshtml")
</div>
@{ Html.RenderAction("_List", "OrderRequest", new { @webOrderRequestId = Model.Entity.ID }); }
<script type="text/javascript">
    //const makeScrollable = (div) => {
    //    div.style.overflowY = 'auto'; // Enables vertical scrolling
    //    div.style.maxHeight = '300px'; // Sets a maximum height
    //};

    //// Example usage
    //const div = document.getElementById('section-web-order-request-items');
    //makeScrollable(div);
</script>