@model USDA.ARS.GRIN.GGTools.Taxonomy.ViewModelLayer.FamilyMapViewModel
@{
    ViewBag.Title = Model.PageTitle;
    Layout = "~/Views/Shared/_LayoutAdminLTE3.cshtml";
}
@Html.Partial("~/Views/Shared/_RevisionHistory.cshtml")
@using (Html.BeginForm("EditSubfamily", "Family", FormMethod.Post, new { id = "frmEdit" }))
{
    @Html.HiddenFor(x => x.PageTitle)
    @Html.HiddenFor(x => x.EventAction)
    @Html.HiddenFor(x => x.EventValue)
    @Html.HiddenFor(x => x.TableName)
    @Html.HiddenFor(x => x.TableCode)
    @Html.HiddenFor(x => x.Entity.ID)
    @Html.HiddenFor(x => x.Entity.ParentID)
    @Html.HiddenFor(x => x.Entity.FamilyID)
    @Html.HiddenFor(x => x.Entity.SubfamilyID)
    @Html.HiddenFor(x => x.Entity.TribeID)
    @Html.HiddenFor(x => x.Entity.SubtribeID)
    @Html.HiddenFor(x => x.Entity.Rank)
    @Html.HiddenFor(x => x.Entity.IsAcceptedName)
    <div class="card card-success">
        <div class="card-header">
            <div class="btn-group">
                <a id="btnSetAcceptedOn" class="btn btn-default btn-sm" href="#" role="button"><i class="fas fa-thumbs-down"></i> Not Accepted</a>
                <a id="btnSetAcceptedOff" class="btn btn-default btn-sm" href="#" role="button"><i class="fas fa-thumbs-up"></i> Accepted</a>
            </div>
            <div class="btn-group">
                <a class="btn btn-default btn-sm" href="@Url.Action("Add","Genus", new { @familyId = Model.Entity.FamilyID, rank="genus" })">Add Genus</a>
            </div>
            <div class="btn-group">
                <a class="btn btn-default btn-sm" href="@Url.Action("AddSubfamily","Family", new { @familyMapId = Model.Entity.ID  })">Add Subfamily</a>
                <button type="button" class="btn btn-default btn-sm dropdown-toggle dropdown-icon" data-toggle="dropdown" aria-expanded="false">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <div class="dropdown-menu" role="menu" style="">
                    <a class="dropdown-item btn-sm" href="@Url.Action("AddTribe", "Family", new { @familyMapId = Model.Entity.ID  })">Add Tribe</a>
                    <a class="dropdown-item btn-sm" href="@Url.Action("AddSubtribe", "Family", new { @familyMapId = Model.Entity.ID  })">Add Subtribe</a>
                </div>
            </div>
            <div class="btn-group">
                <button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#modal-citation-lookup">
                    <i class="fa fa-book"></i>
                </button>
            </div>
            <div class="btn-group">
                <button type="button" class="btn btn-default btn-sm pull-right" data-toggle="modal" data-target="#modal-note-lookup">
                    <i class="fa fa-search margin-r-5"></i>
                    Notes
                </button>
            </div>
            <a href="https://npgsdev.ars-grin.gov/gringlobal/taxon/taxonomyfamily?id=@Model.Entity.ID" target="_blank" class="btn btn-default btn-sm float-right">
                <i class="fa fa-globe"></i>
                View Public Website
            </a>
        </div>
        <div class="card-body">
            @Html.Partial("~/Views/Shared/_ValidationMessages.cshtml")
            <div class="row accepted">
                <div id="section-accepted-name" class="col-md-3 accepted">
                    <div class="form-group">
                        <label>Accepted Name</label>
                        @*@Html.DropDownListFor(x => x.Entity.AcceptedID, Model.FamilyMaps, "Select accepted name", new { id = "ddlSelectAcceptedFamily", @class = "form-control" })*@
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Subfamily Name</label>
                        @Html.TextBoxFor(x => x.Entity.SubfamilyName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Family</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Entity.FamilyName, new { @class = "form-control" })
                            @Html.HiddenFor(x => x.Entity.FamilyID)
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-default btn-flat" data-toggle="modal" data-target="#modal-family-lookup">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Type Genus</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Entity.TypeGenusName, new { @class = "form-control" })
                            @Html.HiddenFor(x => x.Entity.TypeGenusID)

                            @if (Model.Entity.TypeGenusID > 0)
                            {
                                <span class="input-group-btn">
                                    <a href="@Url.Action("Edit", "Genus", new { @entityId = Model.Entity.TypeGenusID })" class="btn btn-default btn-flat">
                                        <i class="fa fa-link"></i>
                                    </a>
                                </span>
                            }
                            <span class="input-group-btn">
                                <button type="button" class="btn btn-default btn-flat" data-toggle="modal" data-target="#modal-genus-lookup">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Alternate Name</label>
                        @Html.TextBoxFor(x => x.Entity.AlternateName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Authority</label>
                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Entity.Authority, new { @class = "form-control" })
                            <span class="input-group-btn">
                                <button type="button" data-toggle="modal" data-target="#modal-author-lookup" class="btn btn-default btn-flat">
                                    <i class="fa fa-search"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Type</label>
                        @Html.DropDownListFor(x => x.Entity.FamilyTypeCode, Model.FamilyTypes, "Select type", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <label>Note</label>
                    @Html.TextAreaFor(x => x.Entity.Note, new { @id = "txtNote", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="card-footer">
            <a href="@Url.Action("Refresh")" class="btn btn-danger">Cancel</a>
            <button type="submit" class="btn btn-default float-right">Save</button>
        </div>
    </div>
}


@if (Model.Entity.ID > 0)
{
    <div class="card">
        <div id="section-dependent-data" class="card-header p-2">
            <ul id="list-dependent-data" class="nav nav-pills">
                <li id="tab_selector_citations" class="nav-item"><a class="nav-link active" href="#tab_content_citations" data-toggle="tab">Citations</a></li>
                <li id="tab_selector_genera" class="nav-item"><a class="nav-link" href="#tab_content_genera" data-toggle="tab">Genera</a></li>
                <li id="tab_selector_synonyms" class="nav-item"><a class="nav-link" href="#tab_content_synonyms" data-toggle="tab">Synonyms</a></li>
                <li id="tab_selector_subdivisions" class="nav-item"><a class="nav-link" href="#tab_content_subdivisions" data-toggle="tab">Subdivisions</a></li>
            </ul>
        </div>
        <div class="card-body">
            <div class="tab-content">
                <div class="tab-pane active" id="tab_content_citations">
                    <div id="section-citations">

                    </div>
                </div>
                <div class="tab-pane" id="tab_content_genera">
                    <!--TODO-->
                </div>
                <div class="tab-pane" id="tab_content_synonyms">
                    <!--TODO-->
                </div>
                <div class="tab-pane" id="tab_content_subdivisions">
                    <!--TODO-->
                </div>

            </div>
        </div>
    </div>
}

@*@if (Model.Entity.ID > 0)
    {
        Html.RenderAction("_List", "FamilyMap", new { @eventValue = Model.EventValue, @isInfraFamilial = "Y", @familyId = Model.Entity.FamilyID });
        Html.RenderAction("_List", "Genus", new { @eventValue = Model.EventValue, @isInfrafamilial = "Y", @entityId = Model.Entity.ID });
        Html.RenderAction("_List", "Citation", new { @familyId = Model.Entity.ID });
    }*@

@Html.Partial("~/Views/Taxonomy/FamilyMap/Modals/_Lookup.cshtml")
@Html.Partial("~/Views/Taxonomy/Author/Modals/_Lookup.cshtml")
@{Html.RenderAction("RenderLookupModal", "Citation", new { isMultiSelect = "Y" }); }
@Html.Partial("~/Views/Shared/Modals/_NoteLookup.cshtml")

@*@Html.Partial("~/Views/FamilyMap/Modals/_InfrafamilialTaxonEdit.cshtml")
    @Html.Partial("~/Views/FamilyMap/Modals/_TypeGenusPrompt.cshtml")
    @Html.Partial("~/Views/Genus/Modals/_Search.cshtml")
    @Html.Partial("~/Views/Shared/Modals/_NoteSearch.cshtml")
    @Html.Partial("~/Views/Author/Modals/_AuthoritySearch.cshtml")*@

<script type="text/javascript">
    $(document).ready(function () {
        Init();
    });

    function Init() {
        SetControlVisibility();

    }

    $("#btnSaveDraft").click(function () {
        $('#EventAction').val('SAVE-DRAFT');
    });

     /*
    * ===================================================================================================
    * AUTHORITY LOOKUP MODAL
    * ===================================================================================================
    */
    $("#btnOpenAuthorityLookupModal").click(function () {
        $('#modal-authority-lookup').modal('show');
    });

    $("#btnLookupAuthor").click(function () {
        SearchAuthor();
    });

    $("#btnLookupAuthorityText").click(function () {
        SearchAuthorityText();
    });

    function SearchAuthor() {
        var link = '@Url.Action("Lookup","Author")';
        var authorLookupShortName = $("#txtAuthorLookupShortName").val();
        var authorLookupFullName = $("#txtAuthorLookupFullName").val();
        var formData = new FormData();

        if ($("#cbxAuthorLookupIsExactMatch").is(":checked")) {
            formData.append("AuthorLookupIsExactMatch", "Y");
        }
        formData.append("AuthorLookupShortName", authorLookupShortName);
        formData.append("AuthorLookupFullName", authorLookupFullName);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-author-lookup-search-results").html(response);
            },
            error: function () {
                alert("Error searching author");
            }
        });
    }

    function SearchAuthorityText() {
        var link = '@Url.Action("LookupTaxa","Author")';
        var tableName = $("#TableName").val();
        var authorityText = $("#txtLookupAuthorityText").val();

        var formData = new FormData();

        formData.append("AuthorityText", authorityText);
        formData.append("TableName", tableName);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-lookup-authority-text-search-results").html(response);
            },
            error: function () {
                alert("Error searching author");
            }
        });
    }

    $("#btnSaveAuthor").click(function () {
        $('#modal-author-lookup').modal('hide');
        var selectedAuthor = GetSelectedEntityText("data-table-author-lookup");
        $("#Entity_Authority").val(selectedAuthor);
    });

    /*
    * ===================================================================================================
    * FAMILY LOOKUP MODAL
    * ===================================================================================================
    */


    /*
    * ===================================================================================================
    * GENUS LOOKUP MODAL
    * ===================================================================================================
    */
    $("#btnOpenGenusLookupModal").click(function () {
        $("#lblGenusLookupTitle").html("Type Genus Search");
        $('#hfCurrentAction').val($(this).data("ggtools-action"));
        $('#hfCurrentValue').val($(this).data("ggtools-value"));
        $('#modal-genus-lookup').modal('show');
    });

    $("#btnLookupGenus").click(function () {
        var genusName = $("#txtLookupGenusName").val();
        var isAcceptedName = "";

        if ($("#cbxLookupGenusAcceptedNames").prop("checked") == true) {
            isAcceptedName = "Y";
        }

        var actionUrl = '@Url.Action("Lookup","Genus")';
        SearchGenus(actionUrl, genusName, isAcceptedName, "Y");
    });

    function SearchGenus(actionUrl, genusName, isAcceptedName, isSingleSelect) {
        var formData = new FormData();
        formData.append("LookupGenusName", genusName);
        formData.append("IsAcceptedName", isAcceptedName);
        formData.append("IsSingleSelect", isSingleSelect);

        $.ajax({
            url: actionUrl,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#section-genus-search-results").html(response);
            }
        });
    }

    function SelectGenus(ID, genusText) {
        $('#modal-genus-lookup').modal('hide');
        $("#Entity_TypeGenusName").val(genusText);
        $("#Entity_TypeGenusID").val(ID);
    }

    $("#btnAddGenus").click(function () {
        var link = '@Url.Action("Add","Genus", new { @eventValue = "genus", @familyId = Model.Entity.ID })';
        var typeGenusId = $("#Entity_TypeGenusID").val();
        if (typeGenusId == 0) {
            $("#modal-type-genus-prompt").modal("show");
        }
        else {
            window.location.href = link;
        }
    });

    /*
    * ===================================================================================================
    * TYPE GENUS PROMPT MODAL
    * ===================================================================================================
    */
    $("#btnSetTypeGenus").click(function () {
        var link = '@Html.Raw(Url.Action("Add","Genus", new { @eventValue = "genus", @familyId = Model.Entity.ID, @isType = "Y" }))';
        window.location.href = link;
    });

    /*
    * ===================================================================================================
    * INFRAFAMILIAL LOOKUP MODAL
    * ===================================================================================================
    */
    $(document).on("click", "[id='btnGenerateInfrafamilialTaxa']", function () {
        LoadInframilialTaxaGrid();
    });

    function LoadInframilialTaxaGrid() {
        var link = '@Url.Action("AddInfrafamilialTaxa","FamilyMap")';
        var familyId = $("#Entity_ID").val();
        var numSubfamily = $("#txtNumSubfamily").val();
        var numTribe = $("#txtNumTribe").val();
        var numSubtribe = $("#txtNumSubtribe").val();
        var formData = new FormData();

        formData.append("FamilyID", familyId);
        formData.append("NumSubfamilies", numSubfamily);
        formData.append("NumTribes", numTribe);
        formData.append("NumSubtribes", numSubtribe);

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (result) {
                $("#section-infrafamilial-taxa-edit").html(result);
            },
            error: function () {
                alert("Error in LoadInframilialTaxaGrid()");
            }
        });
    }

    $(document).on("click", "[id='btnSaveInfrafamilialTaxa']", function () {

        var link = '@Url.Action("GenerateInfrafamilialTaxa","Family")';
        var familyId = $("#Entity_ID").val();
        var formData = new FormData();

        formData.append("FamilyID", familyId);
        $("#data-table-infrafamilial-grid input[type='text']").each(function () {
            var id = $(this).attr("id");
            var rank = $(this).attr("data-ggtools") + "_" + id;
            var value = $(this).val();
            formData.append(rank, value);
        });

        $.ajax({
            url: link,
            type: 'POST',
            cache: false,
            contentType: false,
            processData: false,
            data: formData,
            success: function (response) {
                $("#modal-infrafamilial-taxa-edit").modal("hide");
                $("#frmEdit").submit();
            },
            error: function () {
                alert("Error generating infrafamilial taxa");
            }
        });
    });


    /*
    * ===============================================================================
    * NUMBER SPINNER
    * ===============================================================================
    */
    //$(document).on('click', '.number-spinner button', function () {
    //    var btn = $(this),
    //        oldValue = btn.closest('.number-spinner').find('input').val().trim(),
    //        newVal = 0;

    //    if (btn.attr('data-dir') == 'up') {
    //        newVal = parseInt(oldValue) + 1;
    //    } else {
    //        if (oldValue > 1) {
    //            newVal = parseInt(oldValue) - 1;
    //        } else {
    //            newVal = 0;
    //        }
    //    }
    //    btn.closest('.number-spinner').find('input').val(newVal);
    //});

</script>

